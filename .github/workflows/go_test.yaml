# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: Go Test
on:
  push:
    branches-ignore:
      - temp
  pull_request:
    branches-ignore:
      - temp
defaults:
  run:
    # 指如果run的這些屬性沒有設定的時候，其預設值改為我們這裡所設定的數值
    working-directory: ./v2
jobs:
  test:
    strategy:
      matrix:
        # [ubuntu-latest, macos-latest, windows-latest]
        platform: [ windows-latest ]
        go-version: [ 1.19.x ]
    runs-on: ${{ matrix.platform }}
    name: Integration tests
    steps:
      - name: Check out code into the Go module directory. # 先checkout，這樣才會有go.sum檔案，才有辦法確認是否要用cache
        uses: actions/checkout@v3
      - name: Install Go.
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true # 如果指定的go-version不是最新的，會去下載最新的go版本, 預設為false
          cache: true # 用go.sum來決定是否要在setupGo
          cache-dependency-path: go.sum # subdir/go.sum

      - name: go mod tidy
        run: go mod tidy

      #- name: test "strings"
      #  run: go test ./strings

      #- name: test "op"
      #  run: go test ./op -v

      #- name: test "embed"
      #  run: go test ./embed -v

      - name: test All
        run: go test -v -coverpkg=./... -coverprofile="coverage.txt" ./...

      - name: Cover Func
        run: go tool cover -func="coverage.txt"

      - name: Upload coverage file
        uses: actions/upload-artifact@v3 # 它的path吃的是根路徑，與defaults.run.working-directory無關
        with:
          name: coverage-artifact # 表示輸出的zip檔案名稱，zip當中的各個檔案名稱不會更動 # go tool cover -html="coverage.txt"
          path: |
            ./v2/coverage.txt
